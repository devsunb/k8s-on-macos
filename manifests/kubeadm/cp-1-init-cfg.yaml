# kubeadm init config - Single / Multiple control plane and multiple worker nodes K8s cluster
# advertiseAddress, node-ip and controlPlaneEndpoint must match with 'lima0' interface (shared network assumed)
# podSubnet range needs to match with CNI, Cilium uses its own resource for pod network,and --ipam.operator.clusterPoolIPv4PodCIDRList is used to change from Cilium default
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.105.101
  bindPort: 6443
nodeRegistration:
  name: "cp-1"
  criSocket: "unix:///var/run/containerd/containerd.sock"
  kubeletExtraArgs:
    node-ip: 192.168.105.101
bootstrapTokens:
- token: "9a08jv.c0izixklcxtmnze7"
  description: "kubeadm bootstrap token"
  ttl: "1h"
certificateKey: "e6a2eb85817ab72a4f494f30285ec9785706a83bfcbd2204"
skipPhases:
  - addon/kube-proxy
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
clusterName: "kubernetes-cluster"
controlPlaneEndpoint: 192.168.105.100:6443
apiServer:
  certSANs:
  - "127.0.0.1"
  - "192.168.105.100"
  - "192.168.105.101"
  - "192.168.105.102"
  - "192.168.105.103"
  - "kubernetes-cluster.k8s.internal"
networking:
  serviceSubnet: "10.96.0.0/16"
  podSubnet: "10.244.0.0/16"
  dnsDomain: "cluster.local"
featureGates:
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
# 'kubectl get csr' / 'kubectl certificate approve' are used to approve kubernetes.io/kubelet-serving CSRs
serverTLSBootstrap: true
